/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Model.TDAFotos.CircularDoublyLinkedList;
import archivos.Archivo;
import archivos.SimpleLinkedList;
import entidades.Album;
import entidades.Foto;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.Iterator;
import java.util.ListIterator;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;

/**
 *
 * @author David Sanchez
 */
public class FrmVerFoto extends javax.swing.JFrame {

    public Archivo archivo = FrmHome.archivo;
    private static SimpleLinkedList<Album> album;
    private Album albumActual;

    public FrmVerFoto() {
        this.archivo = archivo;
        loadFrm();
        album = archivo.readAlbum();
        if (album == null) {
            album = new SimpleLinkedList<>();
        }

    }

    public FrmVerFoto(Album albumNew) {
        loadFrm();
        if (!albumNew.getFotos().isEmpty()) {
            CircularDoublyLinkedList<Foto> fotos = albumNew.getFotos();
            Iterator<Foto> li = fotos.iterator();
            Foto foto = (Foto) li.next();
            ImageIcon imageIcon = new ImageIcon(foto.getPath()); // load the image to a imageIcon
            Image image = imageIcon.getImage(); // transform it 
            Image newimg = image.getScaledInstance(700, 500, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
            imageIcon = new ImageIcon(newimg);  // transform it back
            lblFoto.setIcon(imageIcon);
            lblPath.setText(foto.getDescripcion());
        }
        albumActual = albumNew;

    }

    private void loadFrm() {
        initComponents();
        //agregue el icono de ventana
        Image icon = new ImageIcon(getClass().getResource("/Resources/Picasa.png")).getImage();
        setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();
        lblPath = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);

        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });
        getContentPane().add(previous);
        previous.setBounds(10, 238, 33, 57);

        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        getContentPane().add(next);
        next.setBounds(744, 238, 33, 57);
        getContentPane().add(lblFoto);
        lblFoto.setBounds(40, -10, 790, 510);
        getContentPane().add(lblPath);
        lblPath.setBounds(40, 500, 430, 20);

        btnVolver.setText("Volver");
        btnVolver.setMaximumSize(new java.awt.Dimension(80, 23));
        btnVolver.setMinimumSize(new java.awt.Dimension(80, 23));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver);
        btnVolver.setBounds(600, 500, 110, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        FrmAlbum frm = new FrmAlbum(albumActual);
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed

//        // TODO add your handling code here:
        
            CircularDoublyLinkedList<Foto> fotos = albumActual.getFotos();
            Iterator<Foto> li = fotos.iterator();
            Foto foto = (Foto) li.next();
            
            ImageIcon imageIcon = new ImageIcon(foto.getPath()); // load the image to a imageIcon
            Image image = imageIcon.getImage(); // transform it 
            Image newimg = image.getScaledInstance(700, 500, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
            imageIcon = new ImageIcon(newimg);  // transform it back
            lblFoto.setIcon(imageIcon);
            lblPath.setText(foto.getDescripcion());
            System.out.println("next");
        

    }//GEN-LAST:event_nextActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        if (!albumActual.getFotos().isEmpty()) {
            CircularDoublyLinkedList<Foto> fotos = albumActual.getFotos();
            ListIterator<Foto> li = fotos.listIterator();
            Foto foto = (Foto) li.previous();
            ImageIcon imageIcon = new ImageIcon(foto.getPath()); // load the image to a imageIcon
            Image image = imageIcon.getImage(); // transform it 
            Image newimg = image.getScaledInstance(700, 500, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
            imageIcon = new ImageIcon(newimg);  // transform it back
            lblFoto.setIcon(imageIcon);
            lblPath.setText(foto.getDescripcion());
        }
        System.out.println("previous");
        // TODO add your handling code here:
    }//GEN-LAST:event_previousActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblPath;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    // End of variables declaration//GEN-END:variables
}
